{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_patternRequired(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $key = 'key' + $lvl,\n      $idx = 'idx' + $lvl,\n      $matched = 'patternMatched' + $lvl,\n      $dataProperties = 'dataProperties' + $lvl,\n      $closingBraces = '',\n      $ownProperties = it.opts.ownProperties;\n  out += 'var ' + $valid + ' = true;';\n\n  if ($ownProperties) {\n    out += ' var ' + $dataProperties + ' = undefined;';\n  }\n\n  var arr1 = $schema;\n\n  if (arr1) {\n    var $pProperty,\n        i1 = -1,\n        l1 = arr1.length - 1;\n\n    while (i1 < l1) {\n      $pProperty = arr1[i1 += 1];\n      out += ' var ' + $matched + ' = false;  ';\n\n      if ($ownProperties) {\n        out += ' ' + $dataProperties + ' = ' + $dataProperties + ' || Object.keys(' + $data + '); for (var ' + $idx + '=0; ' + $idx + '<' + $dataProperties + '.length; ' + $idx + '++) { var ' + $key + ' = ' + $dataProperties + '[' + $idx + ']; ';\n      } else {\n        out += ' for (var ' + $key + ' in ' + $data + ') { ';\n      }\n\n      out += ' ' + $matched + ' = ' + it.usePattern($pProperty) + '.test(' + $key + '); if (' + $matched + ') break; } ';\n      var $missingPattern = it.util.escapeQuotes($pProperty);\n      out += ' if (!' + $matched + ') { ' + $valid + ' = false;  var err =   ';\n      /* istanbul ignore else */\n\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + 'patternRequired' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { missingPattern: \\'' + $missingPattern + '\\' } ';\n\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should have property matching pattern \\\\\\'' + $missingPattern + '\\\\\\'\\' ';\n        }\n\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n        }\n\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; }   ';\n\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n  }\n\n  out += '' + $closingBraces;\n  return out;\n};","map":null,"metadata":{},"sourceType":"module"}