{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Generator = require(\"../Generator\");\n\nvar Template = require(\"../Template\");\n\nvar _require = require(\"webpack-sources\"),\n    RawSource = _require.RawSource;\n\nvar WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\nvar WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../Dependency\").DependencyTemplate} DependencyTemplate */\n\n\nvar WebAssemblyJavascriptGenerator = /*#__PURE__*/function (_Generator) {\n  _inherits(WebAssemblyJavascriptGenerator, _Generator);\n\n  var _super = _createSuper(WebAssemblyJavascriptGenerator);\n\n  function WebAssemblyJavascriptGenerator() {\n    _classCallCheck(this, WebAssemblyJavascriptGenerator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(WebAssemblyJavascriptGenerator, [{\n    key: \"generate\",\n    value:\n    /**\n     * @param {NormalModule} module module for which the code should be generated\n     * @param {Map<Function, DependencyTemplate>} dependencyTemplates mapping from dependencies to templates\n     * @param {RuntimeTemplate} runtimeTemplate the runtime template\n     * @param {string} type which kind of code should be generated\n     * @returns {Source} generated code\n     */\n    function generate(module, dependencyTemplates, runtimeTemplate, type) {\n      var initIdentifer = Array.isArray(module.usedExports) ? Template.numberToIdentifer(module.usedExports.length) : \"__webpack_init__\";\n      var needExportsCopy = false;\n      var importedModules = new Map();\n      var initParams = [];\n      var index = 0;\n\n      var _iterator = _createForOfIteratorHelper(module.dependencies),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dep = _step.value;\n          var depAsAny =\n          /** @type {any} */\n          dep;\n\n          if (dep.module) {\n            var importData = importedModules.get(dep.module);\n\n            if (importData === undefined) {\n              importedModules.set(dep.module, importData = {\n                importVar: \"m\".concat(index),\n                index: index,\n                request: \"userRequest\" in depAsAny ? depAsAny.userRequest : undefined,\n                names: new Set(),\n                reexports: []\n              });\n              index++;\n            }\n\n            if (dep instanceof WebAssemblyImportDependency) {\n              importData.names.add(dep.name);\n\n              if (dep.description.type === \"GlobalType\") {\n                var exportName = dep.name;\n                var usedName = dep.module && dep.module.isUsed(exportName);\n\n                if (dep.module) {\n                  if (usedName) {\n                    initParams.push(runtimeTemplate.exportFromImport({\n                      module: dep.module,\n                      request: dep.request,\n                      importVar: importData.importVar,\n                      originModule: module,\n                      exportName: dep.name,\n                      asiSafe: true,\n                      isCall: false,\n                      callContext: null\n                    }));\n                  }\n                }\n              }\n            }\n\n            if (dep instanceof WebAssemblyExportImportedDependency) {\n              importData.names.add(dep.name);\n\n              var _usedName = module.isUsed(dep.exportName);\n\n              if (_usedName) {\n                var exportProp = \"\".concat(module.exportsArgument, \"[\").concat(JSON.stringify(_usedName), \"]\");\n                var defineStatement = Template.asString([\"\".concat(exportProp, \" = \").concat(runtimeTemplate.exportFromImport({\n                  module: dep.module,\n                  request: dep.request,\n                  importVar: importData.importVar,\n                  originModule: module,\n                  exportName: dep.name,\n                  asiSafe: true,\n                  isCall: false,\n                  callContext: null\n                }), \";\"), \"if(WebAssembly.Global) \".concat(exportProp, \" = \") + \"new WebAssembly.Global({ value: \".concat(JSON.stringify(dep.valueType), \" }, \").concat(exportProp, \");\")]);\n                importData.reexports.push(defineStatement);\n                needExportsCopy = true;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var importsCode = Template.asString(Array.from(importedModules, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            module = _ref2[0],\n            _ref2$ = _ref2[1],\n            importVar = _ref2$.importVar,\n            request = _ref2$.request,\n            reexports = _ref2$.reexports;\n\n        var importStatement = runtimeTemplate.importStatement({\n          module: module,\n          request: request,\n          importVar: importVar,\n          originModule: module\n        });\n        return importStatement + reexports.join(\"\\n\");\n      })); // create source\n\n      var source = new RawSource(['\"use strict\";', \"// Instantiate WebAssembly module\", \"var wasmExports = __webpack_require__.w[module.i];\", !Array.isArray(module.usedExports) ? \"__webpack_require__.r(\".concat(module.exportsArgument, \");\") : \"\", // this must be before import for circular dependencies\n      \"// export exports from WebAssembly module\", Array.isArray(module.usedExports) && !needExportsCopy ? \"\".concat(module.moduleArgument, \".exports = wasmExports;\") : \"for(var name in wasmExports) \" + \"if(name != \".concat(JSON.stringify(initIdentifer), \") \") + \"\".concat(module.exportsArgument, \"[name] = wasmExports[name];\"), \"// exec imports from WebAssembly module (for esm order)\", importsCode, \"\", \"// exec wasm module\", \"wasmExports[\".concat(JSON.stringify(initIdentifer), \"](\").concat(initParams.join(\", \"), \")\")].join(\"\\n\"));\n      return source;\n    }\n  }]);\n\n  return WebAssemblyJavascriptGenerator;\n}(Generator);\n\nmodule.exports = WebAssemblyJavascriptGenerator;","map":null,"metadata":{},"sourceType":"module"}