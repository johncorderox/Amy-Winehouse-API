{"ast":null,"code":"// This file should be ES5 compatible\n\n/* eslint prefer-spread:0, no-var:0, prefer-reflect:0, no-magic-numbers:0 */\n'use strict';\n\nmodule.exports = function () {\n  // Import Events\n  var events = require('events'); // Export Domain\n\n\n  var domain = {};\n\n  domain.createDomain = domain.create = function () {\n    var d = new events.EventEmitter();\n\n    function emitError(e) {\n      d.emit('error', e);\n    }\n\n    d.add = function (emitter) {\n      emitter.on('error', emitError);\n    };\n\n    d.remove = function (emitter) {\n      emitter.removeListener('error', emitError);\n    };\n\n    d.bind = function (fn) {\n      return function () {\n        var args = Array.prototype.slice.call(arguments);\n\n        try {\n          fn.apply(null, args);\n        } catch (err) {\n          emitError(err);\n        }\n      };\n    };\n\n    d.intercept = function (fn) {\n      return function (err) {\n        if (err) {\n          emitError(err);\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n\n          try {\n            fn.apply(null, args);\n          } catch (err) {\n            emitError(err);\n          }\n        }\n      };\n    };\n\n    d.run = function (fn) {\n      try {\n        fn();\n      } catch (err) {\n        emitError(err);\n      }\n\n      return this;\n    };\n\n    d.dispose = function () {\n      this.removeAllListeners();\n      return this;\n    };\n\n    d.enter = d.exit = function () {\n      return this;\n    };\n\n    return d;\n  };\n\n  return domain;\n}.call(this);","map":null,"metadata":{},"sourceType":"module"}