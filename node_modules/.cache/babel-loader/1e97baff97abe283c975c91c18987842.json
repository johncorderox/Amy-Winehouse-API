{"ast":null,"code":"'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'object',\n    inline: function inline(it, keyword, schema) {\n      var expr = '';\n\n      for (var i = 0; i < schema.length; i++) {\n        if (i) expr += ' && ';\n        expr += '(' + getData(schema[i], it.dataLevel) + ' !== undefined)';\n      }\n\n      return expr;\n    },\n    metaSchema: {\n      type: 'array',\n      items: {\n        type: 'string',\n        format: 'json-pointer'\n      }\n    }\n  };\n  ajv.addKeyword('deepRequired', defFunc.definition);\n  return ajv;\n};\n\nfunction getData(jsonPointer, lvl) {\n  var data = 'data' + (lvl || '');\n  if (!jsonPointer) return data;\n  var expr = data;\n  var segments = jsonPointer.split('/');\n\n  for (var i = 1; i < segments.length; i++) {\n    var segment = segments[i];\n    data += getProperty(unescapeJsonPointer(segment));\n    expr += ' && ' + data;\n  }\n\n  return expr;\n}\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar INTEGER = /^[0-9]+$/;\nvar SINGLE_QUOTE = /'|\\\\/g;\n\nfunction getProperty(key) {\n  return INTEGER.test(key) ? '[' + key + ']' : IDENTIFIER.test(key) ? '.' + key : \"['\" + key.replace(SINGLE_QUOTE, '\\\\$&') + \"']\";\n}\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}","map":null,"metadata":{},"sourceType":"module"}