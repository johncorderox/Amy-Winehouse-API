{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar createHash = require(\"./util/createHash\");\n\nvar RequestShortener = require(\"./RequestShortener\");\n\nvar getHash = function getHash(str) {\n  var hash = createHash(\"md4\");\n  hash.update(str);\n  var digest =\n  /** @type {string} */\n  hash.digest(\"hex\");\n  return digest.substr(0, 4);\n};\n\nvar NamedModulesPlugin = /*#__PURE__*/function () {\n  function NamedModulesPlugin(options) {\n    _classCallCheck(this, NamedModulesPlugin);\n\n    this.options = options || {};\n  }\n\n  _createClass(NamedModulesPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"NamedModulesPlugin\", function (compilation) {\n        compilation.hooks.beforeModuleIds.tap(\"NamedModulesPlugin\", function (modules) {\n          var namedModules = new Map();\n          var context = _this.options.context || compiler.options.context;\n\n          var _iterator = _createForOfIteratorHelper(modules),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _module = _step.value;\n\n              if (_module.id === null && _module.libIdent) {\n                _module.id = _module.libIdent({\n                  context: context\n                });\n              }\n\n              if (_module.id !== null) {\n                var namedModule = namedModules.get(_module.id);\n\n                if (namedModule !== undefined) {\n                  namedModule.push(_module);\n                } else {\n                  namedModules.set(_module.id, [_module]);\n                }\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          var _iterator2 = _createForOfIteratorHelper(namedModules.values()),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _namedModule = _step2.value;\n\n              if (_namedModule.length > 1) {\n                var _iterator3 = _createForOfIteratorHelper(_namedModule),\n                    _step3;\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    var _module2 = _step3.value;\n                    var requestShortener = new RequestShortener(context);\n                    _module2.id = \"\".concat(_module2.id, \"?\").concat(getHash(requestShortener.shorten(_module2.identifier())));\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        });\n      });\n    }\n  }]);\n\n  return NamedModulesPlugin;\n}();\n\nmodule.exports = NamedModulesPlugin;","map":null,"metadata":{},"sourceType":"module"}