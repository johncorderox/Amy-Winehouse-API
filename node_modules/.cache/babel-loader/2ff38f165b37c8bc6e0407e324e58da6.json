{"ast":null,"code":"var illegalop = \"illegal\";\nvar magicModuleHeader = [0x00, 0x61, 0x73, 0x6d];\nvar moduleVersion = [0x01, 0x00, 0x00, 0x00];\n\nfunction invertMap(obj) {\n  var keyModifierFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (k) {\n    return k;\n  };\n  var result = {};\n  var keys = Object.keys(obj);\n\n  for (var i = 0, length = keys.length; i < length; i++) {\n    result[keyModifierFn(obj[keys[i]])] = keys[i];\n  }\n\n  return result;\n}\n\nfunction createSymbolObject(name\n/*: string */\n, object\n/*: string */\n)\n/*: Symbol*/\n{\n  var numberOfArgs\n  /*: number*/\n  = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return {\n    name: name,\n    object: object,\n    numberOfArgs: numberOfArgs\n  };\n}\n\nfunction createSymbol(name\n/*: string */\n)\n/*: Symbol*/\n{\n  var numberOfArgs\n  /*: number*/\n  = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return {\n    name: name,\n    numberOfArgs: numberOfArgs\n  };\n}\n\nvar types = {\n  func: 0x60,\n  result: 0x40\n};\nvar exportTypes = {\n  0x00: \"Func\",\n  0x01: \"Table\",\n  0x02: \"Mem\",\n  0x03: \"Global\"\n};\nvar exportTypesByName = invertMap(exportTypes);\nvar valtypes = {\n  0x7f: \"i32\",\n  0x7e: \"i64\",\n  0x7d: \"f32\",\n  0x7c: \"f64\",\n  0x7b: \"v128\"\n};\nvar valtypesByString = invertMap(valtypes);\nvar tableTypes = {\n  0x70: \"anyfunc\"\n};\nvar blockTypes = Object.assign({}, valtypes, {\n  // https://webassembly.github.io/spec/core/binary/types.html#binary-blocktype\n  0x40: null,\n  // https://webassembly.github.io/spec/core/binary/types.html#binary-valtype\n  0x7f: \"i32\",\n  0x7e: \"i64\",\n  0x7d: \"f32\",\n  0x7c: \"f64\"\n});\nvar globalTypes = {\n  0x00: \"const\",\n  0x01: \"var\"\n};\nvar globalTypesByString = invertMap(globalTypes);\nvar importTypes = {\n  0x00: \"func\",\n  0x01: \"table\",\n  0x02: \"mem\",\n  0x03: \"global\"\n};\nvar sections = {\n  custom: 0,\n  type: 1,\n  \"import\": 2,\n  func: 3,\n  table: 4,\n  memory: 5,\n  global: 6,\n  \"export\": 7,\n  start: 8,\n  element: 9,\n  code: 10,\n  data: 11\n};\nvar symbolsByByte = {\n  0x00: createSymbol(\"unreachable\"),\n  0x01: createSymbol(\"nop\"),\n  0x02: createSymbol(\"block\"),\n  0x03: createSymbol(\"loop\"),\n  0x04: createSymbol(\"if\"),\n  0x05: createSymbol(\"else\"),\n  0x06: illegalop,\n  0x07: illegalop,\n  0x08: illegalop,\n  0x09: illegalop,\n  0x0a: illegalop,\n  0x0b: createSymbol(\"end\"),\n  0x0c: createSymbol(\"br\", 1),\n  0x0d: createSymbol(\"br_if\", 1),\n  0x0e: createSymbol(\"br_table\"),\n  0x0f: createSymbol(\"return\"),\n  0x10: createSymbol(\"call\", 1),\n  0x11: createSymbol(\"call_indirect\", 2),\n  0x12: illegalop,\n  0x13: illegalop,\n  0x14: illegalop,\n  0x15: illegalop,\n  0x16: illegalop,\n  0x17: illegalop,\n  0x18: illegalop,\n  0x19: illegalop,\n  0x1a: createSymbol(\"drop\"),\n  0x1b: createSymbol(\"select\"),\n  0x1c: illegalop,\n  0x1d: illegalop,\n  0x1e: illegalop,\n  0x1f: illegalop,\n  0x20: createSymbol(\"get_local\", 1),\n  0x21: createSymbol(\"set_local\", 1),\n  0x22: createSymbol(\"tee_local\", 1),\n  0x23: createSymbol(\"get_global\", 1),\n  0x24: createSymbol(\"set_global\", 1),\n  0x25: illegalop,\n  0x26: illegalop,\n  0x27: illegalop,\n  0x28: createSymbolObject(\"load\", \"u32\", 1),\n  0x29: createSymbolObject(\"load\", \"u64\", 1),\n  0x2a: createSymbolObject(\"load\", \"f32\", 1),\n  0x2b: createSymbolObject(\"load\", \"f64\", 1),\n  0x2c: createSymbolObject(\"load8_s\", \"u32\", 1),\n  0x2d: createSymbolObject(\"load8_u\", \"u32\", 1),\n  0x2e: createSymbolObject(\"load16_s\", \"u32\", 1),\n  0x2f: createSymbolObject(\"load16_u\", \"u32\", 1),\n  0x30: createSymbolObject(\"load8_s\", \"u64\", 1),\n  0x31: createSymbolObject(\"load8_u\", \"u64\", 1),\n  0x32: createSymbolObject(\"load16_s\", \"u64\", 1),\n  0x33: createSymbolObject(\"load16_u\", \"u64\", 1),\n  0x34: createSymbolObject(\"load32_s\", \"u64\", 1),\n  0x35: createSymbolObject(\"load32_u\", \"u64\", 1),\n  0x36: createSymbolObject(\"store\", \"u32\", 1),\n  0x37: createSymbolObject(\"store\", \"u64\", 1),\n  0x38: createSymbolObject(\"store\", \"f32\", 1),\n  0x39: createSymbolObject(\"store\", \"f64\", 1),\n  0x3a: createSymbolObject(\"store8\", \"u32\", 1),\n  0x3b: createSymbolObject(\"store16\", \"u32\", 1),\n  0x3c: createSymbolObject(\"store8\", \"u64\", 1),\n  0x3d: createSymbolObject(\"store16\", \"u64\", 1),\n  0x3e: createSymbolObject(\"store32\", \"u64\", 1),\n  0x3f: createSymbolObject(\"current_memory\"),\n  0x40: createSymbolObject(\"grow_memory\"),\n  0x41: createSymbolObject(\"const\", \"i32\", 1),\n  0x42: createSymbolObject(\"const\", \"i64\", 1),\n  0x43: createSymbolObject(\"const\", \"f32\", 1),\n  0x44: createSymbolObject(\"const\", \"f64\", 1),\n  0x45: createSymbolObject(\"eqz\", \"i32\"),\n  0x46: createSymbolObject(\"eq\", \"i32\"),\n  0x47: createSymbolObject(\"ne\", \"i32\"),\n  0x48: createSymbolObject(\"lt_s\", \"i32\"),\n  0x49: createSymbolObject(\"lt_u\", \"i32\"),\n  0x4a: createSymbolObject(\"gt_s\", \"i32\"),\n  0x4b: createSymbolObject(\"gt_u\", \"i32\"),\n  0x4c: createSymbolObject(\"le_s\", \"i32\"),\n  0x4d: createSymbolObject(\"le_u\", \"i32\"),\n  0x4e: createSymbolObject(\"ge_s\", \"i32\"),\n  0x4f: createSymbolObject(\"ge_u\", \"i32\"),\n  0x50: createSymbolObject(\"eqz\", \"i64\"),\n  0x51: createSymbolObject(\"eq\", \"i64\"),\n  0x52: createSymbolObject(\"ne\", \"i64\"),\n  0x53: createSymbolObject(\"lt_s\", \"i64\"),\n  0x54: createSymbolObject(\"lt_u\", \"i64\"),\n  0x55: createSymbolObject(\"gt_s\", \"i64\"),\n  0x56: createSymbolObject(\"gt_u\", \"i64\"),\n  0x57: createSymbolObject(\"le_s\", \"i64\"),\n  0x58: createSymbolObject(\"le_u\", \"i64\"),\n  0x59: createSymbolObject(\"ge_s\", \"i64\"),\n  0x5a: createSymbolObject(\"ge_u\", \"i64\"),\n  0x5b: createSymbolObject(\"eq\", \"f32\"),\n  0x5c: createSymbolObject(\"ne\", \"f32\"),\n  0x5d: createSymbolObject(\"lt\", \"f32\"),\n  0x5e: createSymbolObject(\"gt\", \"f32\"),\n  0x5f: createSymbolObject(\"le\", \"f32\"),\n  0x60: createSymbolObject(\"ge\", \"f32\"),\n  0x61: createSymbolObject(\"eq\", \"f64\"),\n  0x62: createSymbolObject(\"ne\", \"f64\"),\n  0x63: createSymbolObject(\"lt\", \"f64\"),\n  0x64: createSymbolObject(\"gt\", \"f64\"),\n  0x65: createSymbolObject(\"le\", \"f64\"),\n  0x66: createSymbolObject(\"ge\", \"f64\"),\n  0x67: createSymbolObject(\"clz\", \"i32\"),\n  0x68: createSymbolObject(\"ctz\", \"i32\"),\n  0x69: createSymbolObject(\"popcnt\", \"i32\"),\n  0x6a: createSymbolObject(\"add\", \"i32\"),\n  0x6b: createSymbolObject(\"sub\", \"i32\"),\n  0x6c: createSymbolObject(\"mul\", \"i32\"),\n  0x6d: createSymbolObject(\"div_s\", \"i32\"),\n  0x6e: createSymbolObject(\"div_u\", \"i32\"),\n  0x6f: createSymbolObject(\"rem_s\", \"i32\"),\n  0x70: createSymbolObject(\"rem_u\", \"i32\"),\n  0x71: createSymbolObject(\"and\", \"i32\"),\n  0x72: createSymbolObject(\"or\", \"i32\"),\n  0x73: createSymbolObject(\"xor\", \"i32\"),\n  0x74: createSymbolObject(\"shl\", \"i32\"),\n  0x75: createSymbolObject(\"shr_s\", \"i32\"),\n  0x76: createSymbolObject(\"shr_u\", \"i32\"),\n  0x77: createSymbolObject(\"rotl\", \"i32\"),\n  0x78: createSymbolObject(\"rotr\", \"i32\"),\n  0x79: createSymbolObject(\"clz\", \"i64\"),\n  0x7a: createSymbolObject(\"ctz\", \"i64\"),\n  0x7b: createSymbolObject(\"popcnt\", \"i64\"),\n  0x7c: createSymbolObject(\"add\", \"i64\"),\n  0x7d: createSymbolObject(\"sub\", \"i64\"),\n  0x7e: createSymbolObject(\"mul\", \"i64\"),\n  0x7f: createSymbolObject(\"div_s\", \"i64\"),\n  0x80: createSymbolObject(\"div_u\", \"i64\"),\n  0x81: createSymbolObject(\"rem_s\", \"i64\"),\n  0x82: createSymbolObject(\"rem_u\", \"i64\"),\n  0x83: createSymbolObject(\"and\", \"i64\"),\n  0x84: createSymbolObject(\"or\", \"i64\"),\n  0x85: createSymbolObject(\"xor\", \"i64\"),\n  0x86: createSymbolObject(\"shl\", \"i64\"),\n  0x87: createSymbolObject(\"shr_s\", \"i64\"),\n  0x88: createSymbolObject(\"shr_u\", \"i64\"),\n  0x89: createSymbolObject(\"rotl\", \"i64\"),\n  0x8a: createSymbolObject(\"rotr\", \"i64\"),\n  0x8b: createSymbolObject(\"abs\", \"f32\"),\n  0x8c: createSymbolObject(\"neg\", \"f32\"),\n  0x8d: createSymbolObject(\"ceil\", \"f32\"),\n  0x8e: createSymbolObject(\"floor\", \"f32\"),\n  0x8f: createSymbolObject(\"trunc\", \"f32\"),\n  0x90: createSymbolObject(\"nearest\", \"f32\"),\n  0x91: createSymbolObject(\"sqrt\", \"f32\"),\n  0x92: createSymbolObject(\"add\", \"f32\"),\n  0x93: createSymbolObject(\"sub\", \"f32\"),\n  0x94: createSymbolObject(\"mul\", \"f32\"),\n  0x95: createSymbolObject(\"div\", \"f32\"),\n  0x96: createSymbolObject(\"min\", \"f32\"),\n  0x97: createSymbolObject(\"max\", \"f32\"),\n  0x98: createSymbolObject(\"copysign\", \"f32\"),\n  0x99: createSymbolObject(\"abs\", \"f64\"),\n  0x9a: createSymbolObject(\"neg\", \"f64\"),\n  0x9b: createSymbolObject(\"ceil\", \"f64\"),\n  0x9c: createSymbolObject(\"floor\", \"f64\"),\n  0x9d: createSymbolObject(\"trunc\", \"f64\"),\n  0x9e: createSymbolObject(\"nearest\", \"f64\"),\n  0x9f: createSymbolObject(\"sqrt\", \"f64\"),\n  0xa0: createSymbolObject(\"add\", \"f64\"),\n  0xa1: createSymbolObject(\"sub\", \"f64\"),\n  0xa2: createSymbolObject(\"mul\", \"f64\"),\n  0xa3: createSymbolObject(\"div\", \"f64\"),\n  0xa4: createSymbolObject(\"min\", \"f64\"),\n  0xa5: createSymbolObject(\"max\", \"f64\"),\n  0xa6: createSymbolObject(\"copysign\", \"f64\"),\n  0xa7: createSymbolObject(\"wrap/i64\", \"i32\"),\n  0xa8: createSymbolObject(\"trunc_s/f32\", \"i32\"),\n  0xa9: createSymbolObject(\"trunc_u/f32\", \"i32\"),\n  0xaa: createSymbolObject(\"trunc_s/f64\", \"i32\"),\n  0xab: createSymbolObject(\"trunc_u/f64\", \"i32\"),\n  0xac: createSymbolObject(\"extend_s/i32\", \"i64\"),\n  0xad: createSymbolObject(\"extend_u/i32\", \"i64\"),\n  0xae: createSymbolObject(\"trunc_s/f32\", \"i64\"),\n  0xaf: createSymbolObject(\"trunc_u/f32\", \"i64\"),\n  0xb0: createSymbolObject(\"trunc_s/f64\", \"i64\"),\n  0xb1: createSymbolObject(\"trunc_u/f64\", \"i64\"),\n  0xb2: createSymbolObject(\"convert_s/i32\", \"f32\"),\n  0xb3: createSymbolObject(\"convert_u/i32\", \"f32\"),\n  0xb4: createSymbolObject(\"convert_s/i64\", \"f32\"),\n  0xb5: createSymbolObject(\"convert_u/i64\", \"f32\"),\n  0xb6: createSymbolObject(\"demote/f64\", \"f32\"),\n  0xb7: createSymbolObject(\"convert_s/i32\", \"f64\"),\n  0xb8: createSymbolObject(\"convert_u/i32\", \"f64\"),\n  0xb9: createSymbolObject(\"convert_s/i64\", \"f64\"),\n  0xba: createSymbolObject(\"convert_u/i64\", \"f64\"),\n  0xbb: createSymbolObject(\"promote/f32\", \"f64\"),\n  0xbc: createSymbolObject(\"reinterpret/f32\", \"i32\"),\n  0xbd: createSymbolObject(\"reinterpret/f64\", \"i64\"),\n  0xbe: createSymbolObject(\"reinterpret/i32\", \"f32\"),\n  0xbf: createSymbolObject(\"reinterpret/i64\", \"f64\")\n};\nvar symbolsByName = invertMap(symbolsByByte, function (obj) {\n  if (typeof obj.object === \"string\") {\n    return \"\".concat(obj.object, \".\").concat(obj.name);\n  }\n\n  return obj.name;\n});\nexport default {\n  symbolsByByte: symbolsByByte,\n  sections: sections,\n  magicModuleHeader: magicModuleHeader,\n  moduleVersion: moduleVersion,\n  types: types,\n  valtypes: valtypes,\n  exportTypes: exportTypes,\n  blockTypes: blockTypes,\n  tableTypes: tableTypes,\n  globalTypes: globalTypes,\n  importTypes: importTypes,\n  valtypesByString: valtypesByString,\n  globalTypesByString: globalTypesByString,\n  exportTypesByName: exportTypesByName,\n  symbolsByName: symbolsByName\n};\nexport { getSectionForNode } from \"./section\";","map":null,"metadata":{},"sourceType":"module"}