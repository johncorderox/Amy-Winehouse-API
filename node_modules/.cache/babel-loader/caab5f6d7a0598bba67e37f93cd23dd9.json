{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar NodeMainTemplatePlugin = require(\"./NodeMainTemplatePlugin\");\n\nvar NodeChunkTemplatePlugin = require(\"./NodeChunkTemplatePlugin\");\n\nvar NodeHotUpdateChunkTemplatePlugin = require(\"./NodeHotUpdateChunkTemplatePlugin\");\n\nvar NodeTemplatePlugin = /*#__PURE__*/function () {\n  function NodeTemplatePlugin(options) {\n    _classCallCheck(this, NodeTemplatePlugin);\n\n    options = options || {};\n    this.asyncChunkLoading = options.asyncChunkLoading;\n  }\n\n  _createClass(NodeTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.thisCompilation.tap(\"NodeTemplatePlugin\", function (compilation) {\n        new NodeMainTemplatePlugin(_this.asyncChunkLoading).apply(compilation.mainTemplate);\n        new NodeChunkTemplatePlugin().apply(compilation.chunkTemplate);\n        new NodeHotUpdateChunkTemplatePlugin().apply(compilation.hotUpdateChunkTemplate);\n      });\n    }\n  }]);\n\n  return NodeTemplatePlugin;\n}();\n\nmodule.exports = NodeTemplatePlugin;","map":null,"metadata":{},"sourceType":"module"}