{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar path = require(\"path\");\n\nvar ParserHelpers = require(\"./ParserHelpers\");\n\nvar CommonJsStuffPlugin = /*#__PURE__*/function () {\n  function CommonJsStuffPlugin() {\n    _classCallCheck(this, CommonJsStuffPlugin);\n  }\n\n  _createClass(CommonJsStuffPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"CommonJsStuffPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n\n        var handler = function handler(parser, parserOptions) {\n          parser.hooks.expression[\"for\"](\"require.main.require\").tap(\"CommonJsStuffPlugin\", ParserHelpers.expressionIsUnsupported(parser, \"require.main.require is not supported by webpack.\"));\n          parser.hooks.expression[\"for\"](\"module.parent.require\").tap(\"CommonJsStuffPlugin\", ParserHelpers.expressionIsUnsupported(parser, \"module.parent.require is not supported by webpack.\"));\n          parser.hooks.expression[\"for\"](\"require.main\").tap(\"CommonJsStuffPlugin\", ParserHelpers.toConstantDependencyWithWebpackRequire(parser, \"__webpack_require__.c[__webpack_require__.s]\"));\n          parser.hooks.expression[\"for\"](\"module.loaded\").tap(\"CommonJsStuffPlugin\", function (expr) {\n            parser.state.module.buildMeta.moduleConcatenationBailout = \"module.loaded\";\n            return ParserHelpers.toConstantDependency(parser, \"module.l\")(expr);\n          });\n          parser.hooks.expression[\"for\"](\"module.id\").tap(\"CommonJsStuffPlugin\", function (expr) {\n            parser.state.module.buildMeta.moduleConcatenationBailout = \"module.id\";\n            return ParserHelpers.toConstantDependency(parser, \"module.i\")(expr);\n          });\n          parser.hooks.expression[\"for\"](\"module.exports\").tap(\"CommonJsStuffPlugin\", function () {\n            var module = parser.state.module;\n            var isHarmony = module.buildMeta && module.buildMeta.exportsType;\n            if (!isHarmony) return true;\n          });\n          parser.hooks.evaluateIdentifier[\"for\"](\"module.hot\").tap(\"CommonJsStuffPlugin\", ParserHelpers.evaluateToIdentifier(\"module.hot\", false));\n          parser.hooks.expression[\"for\"](\"module\").tap(\"CommonJsStuffPlugin\", function () {\n            var module = parser.state.module;\n            var isHarmony = module.buildMeta && module.buildMeta.exportsType;\n            var moduleJsPath = path.join(__dirname, \"..\", \"buildin\", isHarmony ? \"harmony-module.js\" : \"module.js\");\n\n            if (module.context) {\n              moduleJsPath = path.relative(parser.state.module.context, moduleJsPath);\n\n              if (!/^[A-Z]:/i.test(moduleJsPath)) {\n                moduleJsPath = \"./\".concat(moduleJsPath.replace(/\\\\/g, \"/\"));\n              }\n            }\n\n            return ParserHelpers.addParsedVariableToModule(parser, \"module\", \"require(\".concat(JSON.stringify(moduleJsPath), \")(module)\"));\n          });\n        };\n\n        normalModuleFactory.hooks.parser[\"for\"](\"javascript/auto\").tap(\"CommonJsStuffPlugin\", handler);\n        normalModuleFactory.hooks.parser[\"for\"](\"javascript/dynamic\").tap(\"CommonJsStuffPlugin\", handler);\n      });\n    }\n  }]);\n\n  return CommonJsStuffPlugin;\n}();\n\nmodule.exports = CommonJsStuffPlugin;","map":null,"metadata":{},"sourceType":"module"}