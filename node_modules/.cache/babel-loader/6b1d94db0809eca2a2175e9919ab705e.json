{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require(\"webpack-sources\"),\n    ConcatSource = _require.ConcatSource;\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\n\n\nvar accessorToObjectAccess = function accessorToObjectAccess(accessor) {\n  return accessor.map(function (a) {\n    return \"[\".concat(JSON.stringify(a), \"]\");\n  }).join(\"\");\n};\n\nvar ExportPropertyMainTemplatePlugin = /*#__PURE__*/function () {\n  /**\n   * @param {string|string[]} property the name of the property to export\n   */\n  function ExportPropertyMainTemplatePlugin(property) {\n    _classCallCheck(this, ExportPropertyMainTemplatePlugin);\n\n    this.property = property;\n  }\n  /**\n   * @param {Compilation} compilation the compilation instance\n   * @returns {void}\n   */\n\n\n  _createClass(ExportPropertyMainTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(compilation) {\n      var _this = this;\n\n      var mainTemplate = compilation.mainTemplate,\n          chunkTemplate = compilation.chunkTemplate;\n\n      var onRenderWithEntry = function onRenderWithEntry(source, chunk, hash) {\n        var postfix = \"\".concat(accessorToObjectAccess([].concat(_this.property)));\n        return new ConcatSource(source, postfix);\n      };\n\n      for (var _i = 0, _arr = [mainTemplate, chunkTemplate]; _i < _arr.length; _i++) {\n        var template = _arr[_i];\n        template.hooks.renderWithEntry.tap(\"ExportPropertyMainTemplatePlugin\", onRenderWithEntry);\n      }\n\n      mainTemplate.hooks.hash.tap(\"ExportPropertyMainTemplatePlugin\", function (hash) {\n        hash.update(\"export property\");\n        hash.update(\"\".concat(_this.property));\n      });\n    }\n  }]);\n\n  return ExportPropertyMainTemplatePlugin;\n}();\n\nmodule.exports = ExportPropertyMainTemplatePlugin;","map":null,"metadata":{},"sourceType":"module"}