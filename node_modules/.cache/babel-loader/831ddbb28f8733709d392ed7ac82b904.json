{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ExternalsPlugin = require(\"../ExternalsPlugin\");\n\nvar builtins = // eslint-disable-next-line node/no-unsupported-features/node-builtins,node/no-deprecated-api\nrequire(\"module\").builtinModules || Object.keys(process.binding(\"natives\"));\n\nvar NodeTargetPlugin = /*#__PURE__*/function () {\n  function NodeTargetPlugin() {\n    _classCallCheck(this, NodeTargetPlugin);\n  }\n\n  _createClass(NodeTargetPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      new ExternalsPlugin(\"commonjs\", builtins).apply(compiler);\n    }\n  }]);\n\n  return NodeTargetPlugin;\n}();\n\nmodule.exports = NodeTargetPlugin;","map":null,"metadata":{},"sourceType":"module"}