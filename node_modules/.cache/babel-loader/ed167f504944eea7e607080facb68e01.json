{"ast":null,"code":"'use strict';\n\nvar posix = require('posix-character-classes');\n\nmodule.exports = function (brackets) {\n  brackets.compiler\n  /**\n   * Escaped characters\n   */\n  .set('escape', function (node) {\n    return this.emit('\\\\' + node.val.replace(/^\\\\/, ''), node);\n  })\n  /**\n   * Text\n   */\n  .set('text', function (node) {\n    return this.emit(node.val.replace(/([{}])/g, '\\\\$1'), node);\n  })\n  /**\n   * POSIX character classes\n   */\n  .set('posix', function (node) {\n    if (node.val === '[::]') {\n      return this.emit('\\\\[::\\\\]', node);\n    }\n\n    var val = posix[node.inner];\n\n    if (typeof val === 'undefined') {\n      val = '[' + node.inner + ']';\n    }\n\n    return this.emit(val, node);\n  })\n  /**\n   * Non-posix brackets\n   */\n  .set('bracket', function (node) {\n    return this.mapVisit(node.nodes);\n  }).set('bracket.open', function (node) {\n    return this.emit(node.val, node);\n  }).set('bracket.inner', function (node) {\n    var inner = node.val;\n\n    if (inner === '[' || inner === ']') {\n      return this.emit('\\\\' + node.val, node);\n    }\n\n    if (inner === '^]') {\n      return this.emit('^\\\\]', node);\n    }\n\n    if (inner === '^') {\n      return this.emit('^', node);\n    }\n\n    if (/-/.test(inner) && !/(\\d-\\d|\\w-\\w)/.test(inner)) {\n      inner = inner.split('-').join('\\\\-');\n    }\n\n    var isNegated = inner.charAt(0) === '^'; // add slashes to negated brackets, per spec\n\n    if (isNegated && inner.indexOf('/') === -1) {\n      inner += '/';\n    }\n\n    if (isNegated && inner.indexOf('.') === -1) {\n      inner += '.';\n    } // don't unescape `0` (octal literal)\n\n\n    inner = inner.replace(/\\\\([1-9])/g, '$1');\n    return this.emit(inner, node);\n  }).set('bracket.close', function (node) {\n    var val = node.val.replace(/^\\\\/, '');\n\n    if (node.parent.escaped === true) {\n      return this.emit('\\\\' + val, node);\n    }\n\n    return this.emit(val, node);\n  });\n};","map":null,"metadata":{},"sourceType":"module"}