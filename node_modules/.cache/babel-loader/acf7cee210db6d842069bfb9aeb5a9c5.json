{"ast":null,"code":"import { traverse, getSectionMetadatas, shiftSection } from \"@webassemblyjs/ast\";\nimport { overrideBytesInBuffer } from \"@webassemblyjs/helper-buffer\";\nexport function removeSections(ast, uint8Buffer, section) {\n  var sectionMetadatas = getSectionMetadatas(ast, section);\n\n  if (sectionMetadatas.length === 0) {\n    throw new Error(\"Section metadata not found\");\n  }\n\n  return sectionMetadatas.reverse().reduce(function (uint8Buffer, sectionMetadata) {\n    var startsIncludingId = sectionMetadata.startOffset - 1;\n    var ends = section === \"start\" ? sectionMetadata.size.loc.end.column + 1 : sectionMetadata.startOffset + sectionMetadata.size.value + 1;\n    var delta = -(ends - startsIncludingId);\n    /**\n     * update AST\n     */\n    // Once we hit our section every that is after needs to be shifted by the delta\n\n    var encounteredSection = false;\n    traverse(ast, {\n      SectionMetadata: function SectionMetadata(path) {\n        if (path.node.section === section) {\n          encounteredSection = true;\n          return path.remove();\n        }\n\n        if (encounteredSection === true) {\n          shiftSection(ast, path.node, delta);\n        }\n      }\n    }); // replacement is nothing\n\n    var replacement = [];\n    return overrideBytesInBuffer(uint8Buffer, startsIncludingId, ends, replacement);\n  }, uint8Buffer);\n}","map":null,"metadata":{},"sourceType":"module"}