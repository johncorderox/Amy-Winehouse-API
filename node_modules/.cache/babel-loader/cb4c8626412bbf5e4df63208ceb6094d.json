{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\n\nvar SourceMapDevToolModuleOptionsPlugin = /*#__PURE__*/function () {\n  function SourceMapDevToolModuleOptionsPlugin(options) {\n    _classCallCheck(this, SourceMapDevToolModuleOptionsPlugin);\n\n    this.options = options;\n  }\n\n  _createClass(SourceMapDevToolModuleOptionsPlugin, [{\n    key: \"apply\",\n    value: function apply(compilation) {\n      var options = this.options;\n\n      if (options.module !== false) {\n        compilation.hooks.buildModule.tap(\"SourceMapDevToolModuleOptionsPlugin\", function (module) {\n          module.useSourceMap = true;\n        });\n      }\n\n      if (options.lineToLine === true) {\n        compilation.hooks.buildModule.tap(\"SourceMapDevToolModuleOptionsPlugin\", function (module) {\n          module.lineToLine = true;\n        });\n      } else if (options.lineToLine) {\n        compilation.hooks.buildModule.tap(\"SourceMapDevToolModuleOptionsPlugin\", function (module) {\n          if (!module.resource) return;\n          var resourcePath = module.resource;\n          var idx = resourcePath.indexOf(\"?\");\n          if (idx >= 0) resourcePath = resourcePath.substr(0, idx);\n          module.lineToLine = ModuleFilenameHelpers.matchObject(options.lineToLine, resourcePath);\n        });\n      }\n    }\n  }]);\n\n  return SourceMapDevToolModuleOptionsPlugin;\n}();\n\nmodule.exports = SourceMapDevToolModuleOptionsPlugin;","map":null,"metadata":{},"sourceType":"module"}