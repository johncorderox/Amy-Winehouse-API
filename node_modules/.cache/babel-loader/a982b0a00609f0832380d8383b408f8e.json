{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar WebWorkerMainTemplatePlugin = require(\"./WebWorkerMainTemplatePlugin\");\n\nvar WebWorkerChunkTemplatePlugin = require(\"./WebWorkerChunkTemplatePlugin\");\n\nvar WebWorkerHotUpdateChunkTemplatePlugin = require(\"./WebWorkerHotUpdateChunkTemplatePlugin\");\n\nvar WebWorkerTemplatePlugin = /*#__PURE__*/function () {\n  function WebWorkerTemplatePlugin() {\n    _classCallCheck(this, WebWorkerTemplatePlugin);\n  }\n\n  _createClass(WebWorkerTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.thisCompilation.tap(\"WebWorkerTemplatePlugin\", function (compilation) {\n        new WebWorkerMainTemplatePlugin().apply(compilation.mainTemplate);\n        new WebWorkerChunkTemplatePlugin().apply(compilation.chunkTemplate);\n        new WebWorkerHotUpdateChunkTemplatePlugin().apply(compilation.hotUpdateChunkTemplate);\n      });\n    }\n  }]);\n\n  return WebWorkerTemplatePlugin;\n}();\n\nmodule.exports = WebWorkerTemplatePlugin;","map":null,"metadata":{},"sourceType":"module"}