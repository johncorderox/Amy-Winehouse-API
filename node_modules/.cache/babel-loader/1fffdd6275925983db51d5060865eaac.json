{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar fs = require(\"graceful-fs\");\n\nvar NodeJsInputFileSystem = /*#__PURE__*/function () {\n  function NodeJsInputFileSystem() {\n    _classCallCheck(this, NodeJsInputFileSystem);\n  }\n\n  _createClass(NodeJsInputFileSystem, [{\n    key: \"readdir\",\n    value: function readdir(path, callback) {\n      fs.readdir(path, function (err, files) {\n        callback(err, files && files.map(function (file) {\n          return file.normalize ? file.normalize(\"NFC\") : file;\n        }));\n      });\n    }\n  }, {\n    key: \"readdirSync\",\n    value: function readdirSync(path) {\n      var files = fs.readdirSync(path);\n      return files && files.map(function (file) {\n        return file.normalize ? file.normalize(\"NFC\") : file;\n      });\n    }\n  }]);\n\n  return NodeJsInputFileSystem;\n}();\n\nvar fsMethods = [\"stat\", \"statSync\", \"readFile\", \"readFileSync\", \"readlink\", \"readlinkSync\"];\n\nfor (var _i = 0, _fsMethods = fsMethods; _i < _fsMethods.length; _i++) {\n  var key = _fsMethods[_i];\n  Object.defineProperty(NodeJsInputFileSystem.prototype, key, {\n    configurable: true,\n    writable: true,\n    value: fs[key].bind(fs)\n  });\n}\n\nmodule.exports = NodeJsInputFileSystem;","map":null,"metadata":{},"sourceType":"module"}