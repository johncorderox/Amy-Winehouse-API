{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar loaderFlag = \"LOADER_EXECUTION\";\nvar webpackOptionsFlag = \"WEBPACK_OPTIONS\";\n\nexports.cutOffByFlag = function (stack, flag) {\n  stack = stack.split(\"\\n\");\n\n  for (var i = 0; i < stack.length; i++) {\n    if (stack[i].includes(flag)) {\n      stack.length = i;\n    }\n  }\n\n  return stack.join(\"\\n\");\n};\n\nexports.cutOffLoaderExecution = function (stack) {\n  return exports.cutOffByFlag(stack, loaderFlag);\n};\n\nexports.cutOffWebpackOptions = function (stack) {\n  return exports.cutOffByFlag(stack, webpackOptionsFlag);\n};\n\nexports.cutOffMultilineMessage = function (stack, message) {\n  stack = stack.split(\"\\n\");\n  message = message.split(\"\\n\");\n  return stack.reduce(function (acc, line, idx) {\n    return line.includes(message[idx]) ? acc : acc.concat(line);\n  }, []).join(\"\\n\");\n};\n\nexports.cutOffMessage = function (stack, message) {\n  var nextLine = stack.indexOf(\"\\n\");\n\n  if (nextLine === -1) {\n    return stack === message ? \"\" : stack;\n  } else {\n    var firstLine = stack.substr(0, nextLine);\n    return firstLine === message ? stack.substr(nextLine + 1) : stack;\n  }\n};\n\nexports.cleanUp = function (stack, message) {\n  stack = exports.cutOffLoaderExecution(stack);\n  stack = exports.cutOffMessage(stack, message);\n  return stack;\n};\n\nexports.cleanUpWebpackOptions = function (stack, message) {\n  stack = exports.cutOffWebpackOptions(stack);\n  stack = exports.cutOffMultilineMessage(stack, message);\n  return stack;\n};","map":null,"metadata":{},"sourceType":"module"}