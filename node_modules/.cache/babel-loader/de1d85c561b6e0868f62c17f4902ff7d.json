{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Generator = require(\"../Generator\");\n\nvar WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\n\nvar WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\nvar WebAssemblyInInitialChunkError = require(\"./WebAssemblyInInitialChunkError\");\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nvar WebAssemblyGenerator;\nvar WebAssemblyJavascriptGenerator;\nvar WebAssemblyParser;\n\nvar WebAssemblyModulesPlugin = /*#__PURE__*/function () {\n  function WebAssemblyModulesPlugin(options) {\n    _classCallCheck(this, WebAssemblyModulesPlugin);\n\n    this.options = options;\n  }\n  /**\n   * @param {Compiler} compiler compiler\n   * @returns {void}\n   */\n\n\n  _createClass(WebAssemblyModulesPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"WebAssemblyModulesPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(WebAssemblyImportDependency, normalModuleFactory);\n        compilation.dependencyFactories.set(WebAssemblyExportImportedDependency, normalModuleFactory);\n        normalModuleFactory.hooks.createParser[\"for\"](\"webassembly/experimental\").tap(\"WebAssemblyModulesPlugin\", function () {\n          if (WebAssemblyParser === undefined) {\n            WebAssemblyParser = require(\"./WebAssemblyParser\");\n          }\n\n          return new WebAssemblyParser();\n        });\n        normalModuleFactory.hooks.createGenerator[\"for\"](\"webassembly/experimental\").tap(\"WebAssemblyModulesPlugin\", function () {\n          if (WebAssemblyGenerator === undefined) {\n            WebAssemblyGenerator = require(\"./WebAssemblyGenerator\");\n          }\n\n          if (WebAssemblyJavascriptGenerator === undefined) {\n            WebAssemblyJavascriptGenerator = require(\"./WebAssemblyJavascriptGenerator\");\n          }\n\n          return Generator.byType({\n            javascript: new WebAssemblyJavascriptGenerator(),\n            webassembly: new WebAssemblyGenerator(_this.options)\n          });\n        });\n        compilation.chunkTemplate.hooks.renderManifest.tap(\"WebAssemblyModulesPlugin\", function (result, options) {\n          var chunk = options.chunk;\n          var outputOptions = options.outputOptions;\n          var moduleTemplates = options.moduleTemplates;\n          var dependencyTemplates = options.dependencyTemplates;\n\n          var _iterator = _createForOfIteratorHelper(chunk.modulesIterable),\n              _step;\n\n          try {\n            var _loop = function _loop() {\n              var module = _step.value;\n\n              if (module.type && module.type.startsWith(\"webassembly\")) {\n                var filenameTemplate = outputOptions.webassemblyModuleFilename;\n                result.push({\n                  render: function render() {\n                    return _this.renderWebAssembly(module, moduleTemplates.webassembly, dependencyTemplates);\n                  },\n                  filenameTemplate: filenameTemplate,\n                  pathOptions: {\n                    module: module\n                  },\n                  identifier: \"webassemblyModule\".concat(module.id),\n                  hash: module.hash\n                });\n              }\n            };\n\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              _loop();\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          return result;\n        });\n        compilation.hooks.afterChunks.tap(\"WebAssemblyModulesPlugin\", function () {\n          var initialWasmModules = new Set();\n\n          var _iterator2 = _createForOfIteratorHelper(compilation.chunks),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var chunk = _step2.value;\n\n              if (chunk.canBeInitial()) {\n                var _iterator4 = _createForOfIteratorHelper(chunk.modulesIterable),\n                    _step4;\n\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    var _module = _step4.value;\n\n                    if (_module.type.startsWith(\"webassembly\")) {\n                      initialWasmModules.add(_module);\n                    }\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          var _iterator3 = _createForOfIteratorHelper(initialWasmModules),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _module2 = _step3.value;\n              compilation.errors.push(new WebAssemblyInInitialChunkError(_module2, compilation.requestShortener));\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"renderWebAssembly\",\n    value: function renderWebAssembly(module, moduleTemplate, dependencyTemplates) {\n      return moduleTemplate.render(module, dependencyTemplates, {});\n    }\n  }]);\n\n  return WebAssemblyModulesPlugin;\n}();\n\nmodule.exports = WebAssemblyModulesPlugin;","map":null,"metadata":{},"sourceType":"module"}