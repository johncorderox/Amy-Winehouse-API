{"ast":null,"code":"'use strict';\n\nmodule.exports = function (ajv, options) {\n  if (!ajv._opts.allErrors) throw new Error('ajv-errors: Ajv option allErrors must be true');\n\n  if (!ajv._opts.jsonPointers) {\n    console.warn('ajv-errors: Ajv option jsonPointers changed to true');\n    ajv._opts.jsonPointers = true;\n  }\n\n  ajv.addKeyword('errorMessage', {\n    inline: require('./lib/dotjs/errorMessage'),\n    statements: true,\n    valid: true,\n    errors: 'full',\n    config: {\n      KEYWORD_PROPERTY_PARAMS: {\n        required: 'missingProperty',\n        dependencies: 'property'\n      },\n      options: options || {}\n    },\n    metaSchema: {\n      'type': ['string', 'object'],\n      properties: {\n        properties: {\n          $ref: '#/definitions/stringMap'\n        },\n        items: {\n          $ref: '#/definitions/stringList'\n        },\n        required: {\n          $ref: '#/definitions/stringOrMap'\n        },\n        dependencies: {\n          $ref: '#/definitions/stringOrMap'\n        }\n      },\n      additionalProperties: {\n        'type': 'string'\n      },\n      definitions: {\n        stringMap: {\n          'type': ['object'],\n          additionalProperties: {\n            'type': 'string'\n          }\n        },\n        stringOrMap: {\n          'type': ['string', 'object'],\n          additionalProperties: {\n            'type': 'string'\n          }\n        },\n        stringList: {\n          'type': ['array'],\n          items: {\n            'type': 'string'\n          }\n        }\n      }\n    }\n  });\n  return ajv;\n};","map":null,"metadata":{},"sourceType":"module"}