{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar parseJson = require(\"json-parse-better-errors\");\n\nvar JsonExportsDependency = require(\"./dependencies/JsonExportsDependency\");\n\nvar JsonParser = /*#__PURE__*/function () {\n  function JsonParser(options) {\n    _classCallCheck(this, JsonParser);\n\n    this.options = options;\n  }\n\n  _createClass(JsonParser, [{\n    key: \"parse\",\n    value: function parse(source, state) {\n      var data = parseJson(source[0] === \"\\uFEFF\" ? source.slice(1) : source);\n      state.module.buildInfo.jsonData = data;\n      state.module.buildMeta.exportsType = \"named\";\n\n      if (_typeof(data) === \"object\" && data) {\n        state.module.addDependency(new JsonExportsDependency(Object.keys(data)));\n      }\n\n      state.module.addDependency(new JsonExportsDependency([\"default\"]));\n      return state;\n    }\n  }]);\n\n  return JsonParser;\n}();\n\nmodule.exports = JsonParser;","map":null,"metadata":{},"sourceType":"module"}