{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar SourceNode = require(\"source-map\").SourceNode;\n\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\n\nvar Source = /*#__PURE__*/function () {\n  function Source() {\n    _classCallCheck(this, Source);\n  }\n\n  _createClass(Source, [{\n    key: \"source\",\n    value: function source() {\n      throw new Error(\"Abstract\");\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      if (Buffer.from.length === 1) return new Buffer(this.source()).length;\n      return Buffer.byteLength(this.source());\n    }\n  }, {\n    key: \"map\",\n    value: function map(options) {\n      return null;\n    }\n  }, {\n    key: \"sourceAndMap\",\n    value: function sourceAndMap(options) {\n      return {\n        source: this.source(),\n        map: this.map()\n      };\n    }\n  }, {\n    key: \"node\",\n    value: function node() {\n      throw new Error(\"Abstract\");\n    }\n  }, {\n    key: \"listNode\",\n    value: function listNode() {\n      throw new Error(\"Abstract\");\n    }\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      var source = this.source();\n      hash.update(source || \"\");\n    }\n  }]);\n\n  return Source;\n}();\n\nmodule.exports = Source;","map":null,"metadata":{},"sourceType":"module"}