{"ast":null,"code":"'use strict';\n\nvar $module;\n/*\n  let contextProto = this.context;\n  while (contextProto = Object.getPrototypeOf(contextProto)) {\n    completionGroups.push(Object.getOwnPropertyNames(contextProto));\n  }\n*/\n\nfunction handle(data) {\n  var idx = data.idx,\n      child = data.child,\n      method = data.method,\n      args = data.args,\n      callback = function callback() {\n    var _args = Array.prototype.slice.call(arguments);\n\n    if (_args[0] instanceof Error) {\n      var e = _args[0];\n      _args[0] = {\n        '$error': '$error',\n        'type': e.constructor.name,\n        'message': e.message,\n        'stack': e.stack\n      };\n      Object.keys(e).forEach(function (key) {\n        _args[0][key] = e[key];\n      });\n    }\n\n    process.send({\n      owner: 'farm',\n      idx: idx,\n      child: child,\n      args: _args\n    });\n  },\n      exec;\n\n  if (method == null && typeof $module == 'function') exec = $module;else if (typeof $module[method] == 'function') exec = $module[method];\n  if (!exec) return console.error('NO SUCH METHOD:', method);\n  exec.apply(null, args.concat([callback]));\n}\n\nprocess.on('message', function (data) {\n  if (data.owner !== 'farm') {\n    return;\n  }\n\n  if (!$module) return $module = require(data.module);\n  if (data.event == 'die') return process.exit(0);\n  handle(data);\n});","map":null,"metadata":{},"sourceType":"module"}