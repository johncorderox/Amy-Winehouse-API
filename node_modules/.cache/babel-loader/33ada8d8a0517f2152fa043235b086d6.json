{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n/*\nThe classic button, in different colors, sizes, and states\n */\n\n\nvar Button = function Button(_ref) {\n  var Btn = _ref.as,\n      black = _ref.black,\n      danger = _ref.danger,\n      dark = _ref.dark,\n      info = _ref.info,\n      large = _ref.large,\n      light = _ref.light,\n      link = _ref.link,\n      medium = _ref.medium,\n      fullwidth = _ref.fullwidth,\n      outlined = _ref.outlined,\n      primary = _ref.primary,\n      small = _ref.small,\n      success = _ref.success,\n      text = _ref.text,\n      warning = _ref.warning,\n      white = _ref.white,\n      inverted = _ref.inverted,\n      hovered = _ref.hovered,\n      focused = _ref.focused,\n      active = _ref.active,\n      loading = _ref.loading,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, ['as', 'black', 'danger', 'dark', 'info', 'large', 'light', 'link', 'medium', 'fullwidth', 'outlined', 'primary', 'small', 'success', 'text', 'warning', 'white', 'inverted', 'hovered', 'focused', 'active', 'loading', 'className']);\n\n  var classes = (0, _classnames2.default)('button', {\n    'is-black': black,\n    'is-danger': danger,\n    'is-dark': dark,\n    'is-info': info,\n    'is-large': large,\n    'is-light': light,\n    'is-link': link,\n    'is-medium': medium,\n    'is-outlined': outlined,\n    'is-primary': primary,\n    'is-small': small,\n    'is-success': success,\n    'is-text': text,\n    'is-warning': warning,\n    'is-white': white,\n    'is-inverted': inverted,\n    'is-hovered': hovered,\n    'is-focused': focused,\n    'is-active': active,\n    'is-loading': loading,\n    'is-fullwidth': fullwidth,\n    'is-static': props['static']\n  }, className);\n  delete props['static'];\n  return _react2.default.createElement(Btn, _extends({\n    className: classes\n  }, props));\n};\n\nButton.displayName = 'Button';\nButton.defaultProps = {\n  as: 'button'\n};\nButton.propTypes = {\n  as: _propTypes2.default.node,\n  className: _propTypes2.default.string,\n  black: _propTypes2.default.bool,\n  danger: _propTypes2.default.bool,\n  dark: _propTypes2.default.bool,\n  info: _propTypes2.default.bool,\n  fullwidth: _propTypes2.default.bool,\n  large: _propTypes2.default.bool,\n  light: _propTypes2.default.bool,\n  link: _propTypes2.default.bool,\n  medium: _propTypes2.default.bool,\n  outlined: _propTypes2.default.bool,\n  primary: _propTypes2.default.bool,\n  small: _propTypes2.default.bool,\n  success: _propTypes2.default.bool,\n  text: _propTypes2.default.bool,\n  warning: _propTypes2.default.bool,\n  white: _propTypes2.default.bool,\n  inverted: _propTypes2.default.bool,\n  hovered: _propTypes2.default.bool,\n  focused: _propTypes2.default.bool,\n  active: _propTypes2.default.bool,\n  loading: _propTypes2.default.bool,\n  static: _propTypes2.default.bool\n};\nexports.default = Button;","map":null,"metadata":{},"sourceType":"module"}