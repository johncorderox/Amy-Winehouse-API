{"ast":null,"code":"\"use strict\";\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {import(\"./ContextModuleFactory\")} ContextModuleFactory */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ContextExclusionPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {RegExp} negativeMatcher Matcher regular expression\n   */\n  function ContextExclusionPlugin(negativeMatcher) {\n    _classCallCheck(this, ContextExclusionPlugin);\n\n    this.negativeMatcher = negativeMatcher;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler Webpack Compiler\n   * @returns {void}\n   */\n\n\n  _createClass(ContextExclusionPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.contextModuleFactory.tap(\"ContextExclusionPlugin\", function (cmf) {\n        cmf.hooks.contextModuleFiles.tap(\"ContextExclusionPlugin\", function (files) {\n          return files.filter(function (filePath) {\n            return !_this.negativeMatcher.test(filePath);\n          });\n        });\n      });\n    }\n  }]);\n\n  return ContextExclusionPlugin;\n}();\n\nmodule.exports = ContextExclusionPlugin;","map":null,"metadata":{},"sourceType":"module"}