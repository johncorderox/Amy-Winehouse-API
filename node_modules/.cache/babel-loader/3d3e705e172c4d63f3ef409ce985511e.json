{"ast":null,"code":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _os = _interopRequireDefault(require(\"os\"));\n\nvar _cacache = _interopRequireDefault(require(\"cacache\"));\n\nvar _findCacheDir = _interopRequireDefault(require(\"find-cache-dir\"));\n\nvar _workerFarm = _interopRequireDefault(require(\"worker-farm\"));\n\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\n\nvar _isWsl = _interopRequireDefault(require(\"is-wsl\"));\n\nvar _minify = _interopRequireDefault(require(\"./minify\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar worker = require.resolve('./worker');\n\nvar TaskRunner = /*#__PURE__*/function () {\n  function TaskRunner() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TaskRunner);\n\n    var cache = options.cache,\n        parallel = options.parallel;\n    this.cacheDir = cache === true ? (0, _findCacheDir[\"default\"])({\n      name: 'terser-webpack-plugin'\n    }) || _os[\"default\"].tmpdir() : cache; // In some cases cpus() returns undefined\n    // https://github.com/nodejs/node/issues/19022\n\n    var cpus = _os[\"default\"].cpus() || {\n      length: 1\n    }; // WSL sometimes freezes, error seems to be on the WSL side\n    // https://github.com/webpack-contrib/terser-webpack-plugin/issues/21\n\n    this.maxConcurrentWorkers = _isWsl[\"default\"] ? 1 : parallel === true ? cpus.length - 1 : Math.min(Number(parallel) || 0, cpus.length - 1);\n  }\n\n  _createClass(TaskRunner, [{\n    key: \"run\",\n    value: function run(tasks, callback) {\n      var _this = this;\n\n      /* istanbul ignore if */\n      if (!tasks.length) {\n        callback(null, []);\n        return;\n      }\n\n      if (this.maxConcurrentWorkers > 1) {\n        var workerOptions = process.platform === 'win32' ? {\n          maxConcurrentWorkers: this.maxConcurrentWorkers,\n          maxConcurrentCallsPerWorker: 1\n        } : {\n          maxConcurrentWorkers: this.maxConcurrentWorkers\n        };\n        this.workers = (0, _workerFarm[\"default\"])(workerOptions, worker);\n\n        this.boundWorkers = function (options, cb) {\n          try {\n            _this.workers((0, _serializeJavascript[\"default\"])(options), cb);\n          } catch (error) {\n            // worker-farm can fail with ENOMEM or something else\n            cb(error);\n          }\n        };\n      } else {\n        this.boundWorkers = function (options, cb) {\n          try {\n            cb(null, (0, _minify[\"default\"])(options));\n          } catch (error) {\n            cb(error);\n          }\n        };\n      }\n\n      var toRun = tasks.length;\n      var results = [];\n\n      var step = function step(index, data) {\n        toRun -= 1;\n        results[index] = data;\n\n        if (!toRun) {\n          callback(null, results);\n        }\n      };\n\n      tasks.forEach(function (task, index) {\n        var enqueue = function enqueue() {\n          _this.boundWorkers(task, function (error, data) {\n            var result = error ? {\n              error: error\n            } : data;\n\n            var done = function done() {\n              return step(index, result);\n            };\n\n            if (_this.cacheDir && !result.error) {\n              _cacache[\"default\"].put(_this.cacheDir, (0, _serializeJavascript[\"default\"])(task.cacheKeys), JSON.stringify(data)).then(done, done);\n            } else {\n              done();\n            }\n          });\n        };\n\n        if (_this.cacheDir) {\n          _cacache[\"default\"].get(_this.cacheDir, (0, _serializeJavascript[\"default\"])(task.cacheKeys)).then(function (_ref) {\n            var data = _ref.data;\n            return step(index, JSON.parse(data));\n          }, enqueue);\n        } else {\n          enqueue();\n        }\n      });\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      if (this.workers) {\n        _workerFarm[\"default\"].end(this.workers);\n      }\n    }\n  }]);\n\n  return TaskRunner;\n}();\n\nexports[\"default\"] = TaskRunner;","map":null,"metadata":{},"sourceType":"module"}