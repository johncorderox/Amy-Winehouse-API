{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Hook = require(\"./Hook\");\n\nvar HookCodeFactory = require(\"./HookCodeFactory\");\n\nvar AsyncSeriesBailHookCodeFactory = /*#__PURE__*/function (_HookCodeFactory) {\n  _inherits(AsyncSeriesBailHookCodeFactory, _HookCodeFactory);\n\n  var _super = _createSuper(AsyncSeriesBailHookCodeFactory);\n\n  function AsyncSeriesBailHookCodeFactory() {\n    _classCallCheck(this, AsyncSeriesBailHookCodeFactory);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AsyncSeriesBailHookCodeFactory, [{\n    key: \"content\",\n    value: function content(_ref) {\n      var _onError = _ref.onError,\n          _onResult = _ref.onResult,\n          resultReturns = _ref.resultReturns,\n          onDone = _ref.onDone;\n      return this.callTapsSeries({\n        onError: function onError(i, err, next, doneBreak) {\n          return _onError(err) + doneBreak(true);\n        },\n        onResult: function onResult(i, result, next) {\n          return \"if(\".concat(result, \" !== undefined) {\\n\").concat(_onResult(result), \";\\n} else {\\n\").concat(next(), \"}\\n\");\n        },\n        resultReturns: resultReturns,\n        onDone: onDone\n      });\n    }\n  }]);\n\n  return AsyncSeriesBailHookCodeFactory;\n}(HookCodeFactory);\n\nvar factory = new AsyncSeriesBailHookCodeFactory();\n\nvar AsyncSeriesBailHook = /*#__PURE__*/function (_Hook) {\n  _inherits(AsyncSeriesBailHook, _Hook);\n\n  var _super2 = _createSuper(AsyncSeriesBailHook);\n\n  function AsyncSeriesBailHook() {\n    _classCallCheck(this, AsyncSeriesBailHook);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(AsyncSeriesBailHook, [{\n    key: \"compile\",\n    value: function compile(options) {\n      factory.setup(this, options);\n      return factory.create(options);\n    }\n  }]);\n\n  return AsyncSeriesBailHook;\n}(Hook);\n\nObject.defineProperties(AsyncSeriesBailHook.prototype, {\n  _call: {\n    value: undefined,\n    configurable: true,\n    writable: true\n  }\n});\nmodule.exports = AsyncSeriesBailHook;","map":null,"metadata":{},"sourceType":"module"}