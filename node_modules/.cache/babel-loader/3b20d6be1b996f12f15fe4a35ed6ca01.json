{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nmodule.exports = /*#__PURE__*/function () {\n  function ModulesInRootPlugin(source, path, target) {\n    _classCallCheck(this, ModulesInRootPlugin);\n\n    this.source = source;\n    this.path = path;\n    this.target = target;\n  }\n\n  _createClass(ModulesInRootPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"ModulesInRootPlugin\", function (request, resolveContext, callback) {\n        var obj = Object.assign({}, request, {\n          path: _this.path,\n          request: \"./\" + request.request\n        });\n        resolver.doResolve(target, obj, \"looking for modules in \" + _this.path, resolveContext, callback);\n      });\n    }\n  }]);\n\n  return ModulesInRootPlugin;\n}();","map":null,"metadata":{},"sourceType":"module"}